<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
       http://www.springframework.org/schema/mvc       
       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd  
       http://www.springframework.org/schema/jee 
	   http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
       http://www.springframework.org/schema/task
	   http://www.springframework.org/schema/task/spring-task-3.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/cache 
       http://www.springframework.org/schema/cache/spring-cache-3.1.xsd"
	default-lazy-init="true"
>

	<!-- 启用spring mvc 注解 -->
	<!-- 激活 @Required @Autowired,JSR 250's @PostConstruct, @PreDestroy and @Resource
		等标注 -->
	<context:annotation-config/>
	<!-- 默认的注解映射的支持 是一种简写形式，完全可以手动配置替代这种简写形式，简写形式可以快速应用默认配置方案。<mvc:annotation-driven
		/> 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring
		MVC为@Controllers分发请求所必须的。 并提供了：数据绑定支持，@NumberFormatannotation支持，@DateTimeFormat支持，@Valid支持，读写XML的支持（JAXB），读写JSON的支持（Jackson）。 -->
	<mvc:annotation-driven/>

	<!-- 该配置项其实也包含了自动注入上述processor的功能 ,可以将 <context:annotation-config 去掉 -->
	<context:component-scan base-package="com.echain.*">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
<!-- 		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/> -->
	</context:component-scan>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"></bean>


	<!-- 根据客户端的不同的请求决定不同的view进行响应, 如 http://www.sxrczx.com/rest.json http://www.sxrczx.com/rest.xml
		ignoreAcceptHeader:设置为true以忽略对Accept Header的支持 defaultContentType:在没有扩展名时即:
		"http://www.sxrczx.com/rest" 时的默认展现形式 favorParameter:用于开启 http://www.sxrczx.com/rest?format=json
		的支持 -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver" p:order="0" p:defaultContentType="text/html" p:ignoreAcceptHeader="true" p:favorParameter="true" p:favorPathExtension="false" p:parameterName="content">
		<!-- 扩展名至mimeType的映射,即 http://www.sxrczx.com/rest.json 映射为 application/json -->
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json"/>
				<entry key="xml" value="application/xml"/>
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
					<property name="prefix" value="/WEB-INF/magazine/"/>
					<property name="suffix" value=".jsp"></property>  <!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<!-- for application/json -->
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
				<!-- for application/xml -->
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller">
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller"/>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- 异常处理 -->
	<bean id="exceptionResolver" class="com.echain.exception.MyExceptionResolver"></bean>

	<!-- 总管理类，如果将lazy-init='false'，那么容器启动就会执行调度程序 <bean id="startQuertz" lazy-init="false"
		autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers"> <list> <ref bean="doTime"/> </list> </property>
		</bean> -->

	<!-- EXCEL -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="10"></bean>


	<!-- 上传文件时需要用到的分解器，默认将编码转为utf-8 上传大小上限为5MB单位为字节 -->
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="utf-8" /> -->

	<mvc:resources mapping="/static/**" location="/static/"/>
	<!-- 对静态资源文件的访问 方案二 （二选一） <mvc:resources mapping="/images/**" location="/resources/images/"
		cache-period="31556926"/> <mvc:resources mapping="/images/**" location="/resources/icons/"
		cache-period="31556926"/> <mvc:resources mapping="/images/**" location="/resources/login/"
		cache-period="31556926"/> <mvc:resources mapping="/images/**" location="/resources/skins/"
		cache-period="31556926"/> <mvc:resources mapping="/js/**" location="/resources/js/"
		cache-period="31556926"/> <mvc:resources mapping="/css/**" location="/resources/css/"
		cache-period="31556926"/> <mvc:resources mapping="/styles/**" location="/resources/css/"/> -->
	<mvc:default-servlet-handler/>


	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>

	<!-- 定时器开关 -->
	<task:annotation-driven/>

	<!-- 定时扫描待导出的EXCEL，三分钟一次 -->
<!-- 	<bean id="excelExportTask" class="com.guanyong.fbimonitor.task.ExcelExportTask" scope="prototype"></bean> -->
<!-- 	<task:scheduled-tasks> -->
<!-- 		<task:scheduled ref="excelExportTask" method="process" cron="0 0/3 * * * ?"/> -->
<!-- 	</task:scheduled-tasks> -->

	<!-- 发送邮件， 45秒一次/一分钟一次 0/45 * * * * ? 0 0/1 * * * ? -->
<!-- 	<bean id="sendMailTask" class="com.guanyong.fbimonitor.task.SendMailRecordTask" scope="prototype"></bean> -->
<!-- 	<task:scheduled-tasks> -->
<!-- 		<task:scheduled ref="sendMailTask" method="process" cron="0/45 * * * * ?"/> -->
<!-- 	</task:scheduled-tasks> -->

	<!-- 以下定时任务目前不需要开启 2017-11-14 -->

	<!-- 定时 统计侵权数据 fbs_tort_by_day，五分钟一次 -->
	<!--<bean id="statisticsTortDataByDayTask" class="com.guanyong.fbimonitor.task.StatisticsTortDataByDayTask" scope="prototype"></bean>
		<task:scheduled-tasks>
		<task:scheduled ref="statisticsTortDataByDayTask" method="process" cron="0 0/5 * * * ?"/>
		</task:scheduled-tasks> -->

	<!-- 定时跑网盘数据标题匹配作品名， 一分钟一次 -->
	<!-- <bean id="wangpanCompareTask" class="com.guanyong.fbimonitor.task.WangpanCompareTask" scope="prototype"></bean>
		<task:scheduled-tasks>
		<task:scheduled ref="wangpanCompareTask" method="process" cron="0 0/1 * * * ?"/>
		</task:scheduled-tasks> -->

	<!-- 监控导出任务异常， 30分钟一次 -->
	<!-- <bean id="monitorExcelExportTask" class="com.guanyong.fbimonitor.task.MonitorExcelExportTask" scope="prototype"></bean>
		<task:scheduled-tasks>
		<task:scheduled ref="monitorExcelExportTask" method="process" cron="0 0/30 * * * ?"/>
		</task:scheduled-tasks> -->

	<!-- 定时统计每个网站的侵权总量 每天凌晨23点 0 0 23 * * ? 每2分一次 0 0/2 * * * ? 每天12点，23点执行
		一次 0 0 12,23 * * ? 每三小时一次 0 0 0/3 * * ? -->
	<!-- <bean id="statisticsSiteTortCountTask" class="com.guanyong.fbimonitor.task.StatisticsSiteTortCountTask" scope="prototype"></bean>
		<task:scheduled-tasks>
		<task:scheduled ref="statisticsSiteTortCountTask" method="process" cron="0 0 0/3 * * ?"/>
		</task:scheduled-tasks> -->

	<!-- 定时检查导出任务的状态是否为2 -->
	<!-- <bean id="checkExcelExportStatusTask" class="com.guanyong.fbimonitor.task.CheckExcelExportStatusTask" scope="prototype"></bean>
		<task:scheduled-tasks>
		<task:scheduled ref="checkExcelExportStatusTask" method="process" cron="0 0 0/3 * * ?"/>
		</task:scheduled-tasks> -->


	<!-- <bean id="wangpanTask" class="com.guanyong.fbimonitor.task.WangpanTask"
		scope="prototype"></bean> <task:scheduled-tasks> <task:scheduled ref="wangpanTask"
		method="process" cron="0 0/3 * * * ?" /> </task:scheduled-tasks> <bean id="snsTask"
		class="com.guanyong.fbimonitor.task.SnsTask" scope="prototype"></bean> <task:scheduled-tasks>
		<task:scheduled ref="snsTask" method="process" cron="0 0/3 * * * ?" /> </task:scheduled-tasks> -->

	<!-- <bean id="excelExportThread" class="com.guanyong.fbimonitor.thread.ExcelExportThread">
		<property name="fbmActionJobDataExportDao" ref="fbmActionJobDataExportDao"></property>
		<property name="fbmDataExportDao" ref="fbmDataExportDao"></property> </bean>
		<bean id="fbmActionJobDataExportDao" class="com.guanyong.fbimonitor.dao.FbmActionJobDataExportDao"></bean>
		<bean id="fbmDataExportDao" class="com.guanyong.fbimonitor.dao.FBMDataExportDao"></bean> -->

	<!-- 0 0/5 * * * ? -->

	<!-- cacheManager工厂类 <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
		p:configLocation="classpath:ehcache.xml" /> -->

	<!-- 声明cacheManager <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
		p:cacheManager-ref="cacheManagerFactory" /> -->

</beans>       