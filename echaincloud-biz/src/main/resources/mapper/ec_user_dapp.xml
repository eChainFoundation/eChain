<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.echain.dao.EcUserDappDao" >
  <resultMap id="BaseResultMap" type="com.echain.entity.EcUserDapp" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="dapp_id" property="dappId" jdbcType="BIGINT" />
    <result column="is_upload_single" property="isUploadSingle" jdbcType="CHAR" />
    <result column="consume_points" property="consumePoints" jdbcType="BIGINT" />
    <result column="get_points" property="getPoints" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, dapp_id, is_upload_single, consume_points, get_points, create_time
  </sql>
  <!--<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ec_user_dapp
    where id = #{id,jdbcType=BIGINT}
  </select>-->
  
  <select id="getBySingleUpload" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ec_user_dapp
    where is_upload_single = '1'
  </select>
  
  <select id="getByNotSingleUpload" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ec_user_dapp
    where is_upload_single = '0'
  </select>
  
  <select id="selectByUserIdAndDappId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ec_user_dapp
    where user_id = #{userId,jdbcType=BIGINT} and dapp_id = #{dappId,jdbcType=BIGINT}
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ec_user_dapp
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  
<!--  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ec_user_dapp
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.echain.entity.EcUserDapp" >
  	<selectKey resultType="long"  keyProperty="id">  
 	   SELECT LAST_INSERT_ID() 
   	</selectKey>
    insert into ec_user_dapp (id, user_id, dapp_id, is_upload_single,
      consume_points, get_points, create_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{dappId,jdbcType=BIGINT}, #{isUploadSingle,jdbcType=CHAR}, 
      #{consumePoints,jdbcType=BIGINT}, #{getPoints,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.echain.entity.EcUserDapp" >
  	<selectKey resultType="long"  keyProperty="id">  
 	   SELECT LAST_INSERT_ID() 
   	</selectKey>
    insert into ec_user_dapp
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="dappId != null" >
        dapp_id,
      </if>
      <if test="isUploadSingle != null" >
        is_upload_single,
      </if>
      <if test="consumePoints != null" >
        consume_points,
      </if>
      <if test="getPoints != null" >
        get_points,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="dappId != null" >
        #{dappId,jdbcType=BIGINT},
      </if>
      <if test="isUploadSingle != null" >
        #{isUploadSingle,jdbcType=CHAR},
      </if>
      <if test="consumePoints != null" >
        #{consumePoints,jdbcType=BIGINT},
      </if>
      <if test="getPoints != null" >
        #{getPoints,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.echain.entity.EcUserDapp" >
    update ec_user_dapp
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="dappId != null" >
        dapp_id = #{dappId,jdbcType=BIGINT},
      </if>
      <if test="isUploadSingle != null" >
        is_upload_single = #{isUploadSingle,jdbcType=CHAR},
      </if>
      <if test="consumePoints != null" >
        consume_points = #{consumePoints,jdbcType=BIGINT},
      </if>
      <if test="getPoints != null" >
        get_points = #{getPoints,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.echain.entity.EcUserDapp" >
    update ec_user_dapp
    set user_id = #{userId,jdbcType=BIGINT},
      dapp_id = #{dappId,jdbcType=BIGINT},
      is_upload_single = #{isUploadSingle,jdbcType=CHAR},
      consume_points = #{consumePoints,jdbcType=BIGINT},
      get_points = #{getPoints,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>-->
</mapper>