<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.echain.dao.EcTransactionDao" >
  <resultMap id="BaseResultMap" type="com.echain.entity.EcTransaction" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="dapp_id" property="dappId" jdbcType="BIGINT" />
    <result column="user_dapp_id" property="userDappId" jdbcType="BIGINT" />
    <result column="transaction_platform" property="transactionPlatform" jdbcType="VARCHAR" />
    <result column="transaction_no" property="transactionNo" jdbcType="VARCHAR" />
    <result column="transaction_picture" property="transactionPicture" jdbcType="VARCHAR" />
    <result column="logistics_company_id" property="logisticsCompanyId" jdbcType="BIGINT" />
    <result column="logistics_no" property="logisticsNo" jdbcType="VARCHAR" />
    <result column="describe_md5" property="describeMd5" jdbcType="CHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="error_msg" property="errorMsg" jdbcType="VARCHAR" />
    <result column="transaction_key" property="transactionKey" jdbcType="VARCHAR" />
    <result column="transaction_hash" property="transactionHash" jdbcType="VARCHAR" />
    <result column="block_no" property="blockNo" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="md5" property="md5" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.echain.entity.EcTransaction" extends="BaseResultMap" >
    <result column="describe_text" property="describeText" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  <resultMap id="TransactionMD5sByUserDappIdsResultMap" type="com.echain.entity.EcTransaction" >
    <id column="tid" property="id" jdbcType="BIGINT" />
    <result column="describe_md5" property="describeMd5" jdbcType="CHAR" />
    
     <collection property="records" ofType="com.echain.entity.EcLogisticsRecord">
          <id column="rid" property="id" jdbcType="BIGINT" />
		  <result column="logistics_md5" property="logisticsMd5" jdbcType="CHAR" />
      </collection>
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, user_id, dapp_id, user_dapp_id, transaction_platform, transaction_no, transaction_picture, 
    logistics_company_id, logistics_no, describe_md5, status, error_msg, transaction_key,transaction_hash, block_no, md5,create_time
  </sql>
  <sql id="Blob_Column_List" >
    describe_text
  </sql>
 <!-- <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ec_transaction
    where id = #{id,jdbcType=BIGINT}
  </select>-->
  <select id="selectListForCheck" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ec_transaction
    where dapp_id = 0 and user_dapp_id = 0 and status = 0
  </select>
  <select id="selectListForCheckWithLimit" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ec_transaction
    where dapp_id = 0 and user_dapp_id = 0 and status = 0 order by  create_time limit #{m,jdbcType=INTEGER},#{n,jdbcType=INTEGER}
  </select>
  <select id="selectMinIdNokeyAndChecked" resultType="java.lang.Long">
    select min(id) from ec_transaction where transaction_key = -1 and status = 1
  </select>
  <!--<select id="selectListTransactionMD5s" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select id,describe_md5 from ec_transaction t
	<where>
		transaction_key = -1 and status = 1
  		<if test="minId != null">
  			and t.id >= #{minId} 
  		</if>
  		<if test="upDataSize != null">
  			limit 0, #{upDataSize}
  		</if>
  	</where>
  </select>-->
  <!--<select id="selectListTransactionsNotSingleUpload" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select id,describe_md5 from ec_transaction t
	<where>
		status = 1
  		<if test="userAppIds != null">
  			and user_dapp_id not in(#{userAppIds});
  		</if>
  	</where>
  </select>-->
  
  <select id="selectListTransactionsNotSingleUploadDappId" resultMap="TransactionMD5sByUserDappIdsResultMap">
    select t.id tid,t.describe_md5, 
    r.id rid, r.logistics_md5
    from ec_transaction t
    left join ec_logistics_record r
    on t.logistics_company_id = r.logistics_company_id
    and t.logistics_no =r.logistics_no
    where t.status = 1 
    and dapp_id=#{dappId}
    and t.user_dapp_id in (#{userAppIds})
  </select>
  
  <!--<select id="selectListTransactionMD5sByUserId" resultMap="BaseResultMap" parameterType="long" >
    select id,describe_md5 from ec_transaction t where user_id = #{userId} and status = 1
  </select>-->
  
  <select id="selectListTransactionMds5ByUserDappIds" resultMap="TransactionMD5sByUserDappIdsResultMap" parameterType="string" >
    select t.id tid,t.describe_md5, 
    r.id rid, r.logistics_md5
    from ec_transaction t
    left join ec_logistics_record r
    on t.logistics_company_id = r.logistics_company_id
    and t.logistics_no =r.logistics_no
    where t.status = 1 and t.user_dapp_id in (#{userDappIds}) 
  </select>
  
  <select id="selectListTransactionByUserDappId" resultMap="ResultMapWithBLOBs" parameterType="string" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ec_transaction t
    where t.status = 1 
    and t.user_dapp_id = #{userDappId}
    and transaction_key is not null 
    and transaction_key!=''
    order by create_time DESC
  </select>
  
  <update id="batchUpdateTransaction">
  	update ec_transaction 
    set transaction_key=#{transactionKey},
    transaction_hash=#{transactionHash},
    block_no=#{blockNo},
    md5=#{md5}
    where id in
    <foreach collection="list" index="index" item="item" 
        separator="," open="(" close=")">
        #{item,jdbcType=BIGINT}
    </foreach>
  </update>
  
  <select id="selectEchainListByUserId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" /> 
    from ec_transaction t
    where t.dapp_id = 0
    and t.user_id =#{userId,jdbcType=BIGINT}
    order by t.create_time desc
  </select>
  <!--<delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ec_transaction
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.echain.entity.EcTransaction" >
  	<selectKey resultType="long"  keyProperty="id">  
 	   SELECT LAST_INSERT_ID() 
   	</selectKey> 
    insert into ec_transaction (id, user_id, dapp_id, 
      user_dapp_id, transaction_platform, transaction_no, 
      transaction_picture, logistics_company_id, logistics_no, 
      describe_md5, status, error_msg, transaction_key,transaction_hash, block_no, md5, create_time, describe_text
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{dappId,jdbcType=BIGINT}, 
      #{userDappId,jdbcType=BIGINT}, #{transactionPlatform,jdbcType=VARCHAR}, #{transactionNo,jdbcType=VARCHAR}, 
      #{transactionPicture,jdbcType=VARCHAR}, #{logisticsCompanyId,jdbcType=BIGINT}, #{logisticsNo,jdbcType=VARCHAR}, 
      #{describeMd5,jdbcType=CHAR}, #{status,jdbcType=CHAR}, #{errorMsg,jdbcType=VARCHAR}, 
      #{transactionKey,jdbcType=VARCHAR}, #{transactionHash,jdbcType=VARCHAR}, #{blockNo,jdbcType=VARCHAR}, 
      #{md5,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{describeText,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.echain.entity.EcTransaction" >
  	<selectKey resultType="long"  keyProperty="id">  
 	   SELECT LAST_INSERT_ID() 
   	</selectKey> 
    insert IGNORE into ec_transaction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="dappId != null" >
        dapp_id,
      </if>
      <if test="userDappId != null" >
        user_dapp_id,
      </if>
      <if test="transactionPlatform != null" >
        transaction_platform,
      </if>
      <if test="transactionNo != null" >
        transaction_no,
      </if>
      <if test="transactionPicture != null" >
        transaction_picture,
      </if>
      <if test="logisticsCompanyId != null" >
        logistics_company_id,
      </if>
      <if test="logisticsNo != null" >
        logistics_no,
      </if>
      <if test="describeMd5 != null" >
        describe_md5,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="errorMsg != null" >
        error_msg,
      </if>
      <if test="transactionKey != null" >
        transaction_key,
      </if>
      <if test="transactionHash != null" >
        transaction_hash,
      </if>
      <if test="blockNo != null" >
        block_no,
      </if>
      <if test="md5 != null" >
        md5,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="describeText != null" >
        describe_text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="dappId != null" >
        #{dappId,jdbcType=BIGINT},
      </if>
      <if test="userDappId != null" >
        #{userDappId,jdbcType=BIGINT},
      </if>
      <if test="transactionPlatform != null" >
        #{transactionPlatform,jdbcType=VARCHAR},
      </if>
      <if test="transactionNo != null" >
        #{transactionNo,jdbcType=VARCHAR},
      </if>
      <if test="transactionPicture != null" >
        #{transactionPicture,jdbcType=VARCHAR},
      </if>
      <if test="logisticsCompanyId != null" >
        #{logisticsCompanyId,jdbcType=BIGINT},
      </if>
      <if test="logisticsNo != null" >
        #{logisticsNo,jdbcType=VARCHAR},
      </if>
      <if test="describeMd5 != null" >
        #{describeMd5,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="errorMsg != null" >
        #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="transactionKey != null" >
        #{transactionKey,jdbcType=VARCHAR},
      </if>
      <if test="transactionHash != null" >
        #{transactionHash,jdbcType=VARCHAR},
      </if>
      <if test="blockNo != null" >
        #{blockNo,jdbcType=VARCHAR},
      </if>
      <if test="md5 != null" >
        #{md5,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="describeText != null" >
        #{describeText,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.echain.entity.EcTransaction" >
    update ec_transaction
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="dappId != null" >
        dapp_id = #{dappId,jdbcType=BIGINT},
      </if>
      <if test="userDappId != null" >
        user_dapp_id = #{userDappId,jdbcType=BIGINT},
      </if>
      <if test="transactionPlatform != null" >
        transaction_platform = #{transactionPlatform,jdbcType=VARCHAR},
      </if>
      <if test="transactionNo != null" >
        transaction_no = #{transactionNo,jdbcType=VARCHAR},
      </if>
      <if test="transactionPicture != null" >
        transaction_picture = #{transactionPicture,jdbcType=VARCHAR},
      </if>
      <if test="logisticsCompanyId != null" >
        logistics_company_id = #{logisticsCompanyId,jdbcType=BIGINT},
      </if>
      <if test="logisticsNo != null" >
        logistics_no = #{logisticsNo,jdbcType=VARCHAR},
      </if>
      <if test="describeMd5 != null" >
        describe_md5 = #{describeMd5,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="errorMsg != null" >
        error_msg = #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="transactionKey != null" >
        transaction_key = #{transactionKey,jdbcType=VARCHAR},
      </if>
      <if test="transactionHash != null" >
        transaction_hash = #{transactionHash,jdbcType=VARCHAR},
      </if>
      <if test="blockNo != null" >
        block_no = #{blockNo,jdbcType=VARCHAR},
      </if>
      <if test="md5 != null" >
        md5 = #{md5,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="describeText != null" >
        describe_text = #{describeText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>-->
  <!--<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.echain.entity.EcTransaction" >
    update ec_transaction
    set user_id = #{userId,jdbcType=BIGINT},
      dapp_id = #{dappId,jdbcType=BIGINT},
      user_dapp_id = #{userDappId,jdbcType=BIGINT},
      transaction_platform = #{transactionPlatform,jdbcType=VARCHAR},
      transaction_no = #{transactionNo,jdbcType=VARCHAR},
      transaction_picture = #{transactionPicture,jdbcType=VARCHAR},
      logistics_company_id = #{logisticsCompanyId,jdbcType=BIGINT},
      logistics_no = #{logisticsNo,jdbcType=VARCHAR},
      describe_md5 = #{describeMd5,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      error_msg = #{errorMsg,jdbcType=VARCHAR},
      transaction_key = #{transactionKey,jdbcType=VARCHAR}, 
      transaction_hash = #{transactionHash,jdbcType=VARCHAR},
      block_no = #{blockNo,jdbcType=VARCHAR},
      md5 = #{md5,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      describe_text = #{describeText,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>-->
 <!-- <update id="updateByPrimaryKey" parameterType="com.echain.entity.EcTransaction" >
    update ec_transaction
    set user_id = #{userId,jdbcType=BIGINT},
      dapp_id = #{dappId,jdbcType=BIGINT},
      user_dapp_id = #{userDappId,jdbcType=BIGINT},
      transaction_platform = #{transactionPlatform,jdbcType=VARCHAR},
      transaction_no = #{transactionNo,jdbcType=VARCHAR},
      transaction_picture = #{transactionPicture,jdbcType=VARCHAR},
      logistics_company_id = #{logisticsCompanyId,jdbcType=BIGINT},
      logistics_no = #{logisticsNo,jdbcType=VARCHAR},
      describe_md5 = #{describeMd5,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      error_msg = #{errorMsg,jdbcType=VARCHAR},
      transaction_key = #{transactionKey,jdbcType=VARCHAR}, 
      transaction_hash = #{transactionHash,jdbcType=VARCHAR},
      block_no = #{blockNo,jdbcType=VARCHAR},
      md5 = #{md5,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>-->
</mapper>