<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.echain.dao.EcTransactionDao">
    <resultMap id="BaseResultMap" type="com.echain.entity.EcTransaction">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="dapp_id" property="dappId" jdbcType="BIGINT"/>
        <result column="user_dapp_id" property="userDappId" jdbcType="BIGINT"/>
        <result column="transaction_platform" property="transactionPlatform" jdbcType="VARCHAR"/>
        <result column="transaction_no" property="transactionNo" jdbcType="VARCHAR"/>
        <result column="transaction_picture" property="transactionPicture" jdbcType="VARCHAR"/>
        <result column="logistics_company_id" property="logisticsCompanyId" jdbcType="BIGINT"/>
        <result column="logistics_no" property="logisticsNo" jdbcType="VARCHAR"/>
        <result column="describe_md5" property="describeMd5" jdbcType="CHAR"/>
        <result column="status" property="status" jdbcType="CHAR"/>
        <result column="error_msg" property="errorMsg" jdbcType="VARCHAR"/>
        <result column="transaction_key" property="transactionKey" jdbcType="VARCHAR"/>
        <result column="transaction_hash" property="transactionHash" jdbcType="VARCHAR"/>
        <result column="block_no" property="blockNo" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="transaction_value" property="transactionValue" jdbcType="CHAR"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.echain.entity.EcTransaction" extends="BaseResultMap">
        <result column="describe_text" property="describeText" jdbcType="LONGVARCHAR"/>
    </resultMap>

    <resultMap id="TransactionMD5sByUserDappIdsResultMap" type="com.echain.entity.EcTransaction">
        <id column="tid" property="id" jdbcType="BIGINT"/>
        <result column="describe_md5" property="describeMd5" jdbcType="CHAR"/>

        <collection property="records" ofType="com.echain.entity.EcLogisticsRecord">
            <id column="rid" property="id" jdbcType="BIGINT"/>
            <result column="logistics_md5" property="logisticsMd5" jdbcType="CHAR"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
    id, user_id, dapp_id, user_dapp_id, transaction_platform, transaction_no, transaction_picture, 
    logistics_company_id, logistics_no, describe_md5, status, error_msg, transaction_key,transaction_hash, block_no, transaction_value,
    create_time
  </sql>
    <sql id="Blob_Column_List">
    describe_text
  </sql>
    <select id="selectListForCheck" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        FROM ec_transaction
        WHERE dapp_id = 0 AND user_dapp_id = 0 AND status = 0
    </select>
    <select id="selectListForCheckWithLimit" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        FROM ec_transaction
        WHERE dapp_id = 0
        AND user_dapp_id = 0
        AND status = 0
        ORDER BY create_time
        LIMIT #{m,jdbcType=INTEGER},#{n,jdbcType=INTEGER}
    </select>
    <select id="selectMinIdNokeyAndChecked" resultType="java.lang.Long">
    SELECT MIN(id) FROM ec_transaction WHERE transaction_key = -1 AND status = 1
  </select>
    <select id="selectListTransactionsNotSingleUploadDappId" resultMap="TransactionMD5sByUserDappIdsResultMap">
        SELECT t.id tid,t.describe_md5,
        r.id rid, r.logistics_md5
        FROM ec_transaction t
        LEFT JOIN ec_logistics_record r
        ON t.logistics_company_id = r.logistics_company_id
        AND t.logistics_no =r.logistics_no
        WHERE t.status = 1
        AND dapp_id=#{dappId}
        AND t.user_dapp_id IN (#{userAppIds})
        <if test="date!=null">
            AND TO_DAYS(t.create_time) = TO_DAYS(#{date})
        </if>
    </select>

    <select id="selectListTransactionMds5ByUserDappIds" resultMap="TransactionMD5sByUserDappIdsResultMap"
            parameterType="string">
        SELECT t.id tid,t.describe_md5,
        r.id rid, r.logistics_md5
        FROM ec_transaction t
        LEFT JOIN ec_logistics_record r
        ON t.logistics_company_id = r.logistics_company_id
        AND t.logistics_no =r.logistics_no
        WHERE t.status = 1
        AND t.user_dapp_id IN (#{userDappIds})
        <if test="date!=null">
            AND TO_DAYS(t.create_time) = TO_DAYS(#{date})
        </if>
    </select>

    <select id="selectListTransactionByUserDappId" resultMap="ResultMapWithBLOBs" parameterType="string">
        SELECT
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        FROM ec_transaction t
        WHERE t.status = 1
        AND t.user_dapp_id = #{userDappId}
        AND transaction_key IS NOT NULL
        AND transaction_key!=''
        ORDER BY create_time DESC
    </select>

    <update id="batchUpdateTransaction">
        UPDATE ec_transaction
        SET transaction_key=#{transactionKey},
        transaction_hash=#{transactionHash},
        block_no=#{blockNo},
        transaction_value=#{transactionValue}
        WHERE id IN
        <foreach collection="list" index="index" item="item"
                 separator="," open="(" close=")">
            #{item,jdbcType=BIGINT}
        </foreach>
    </update>

    <select id="selectEchainListByUserId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ec_transaction t
        WHERE t.dapp_id = 0
        AND t.user_id =#{userId,jdbcType=BIGINT}
        ORDER BY t.create_time DESC
    </select>

    <select id="getTransactionsByPlatform" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        FROM ec_transaction t
        WHERE t.dapp_id = #{dappId}
        AND t.transaction_platform =#{transactionPlatform}
        AND t.transaction_no =#{transactionNo}
    </select>
</mapper>